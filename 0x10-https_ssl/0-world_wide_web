#!/usr/bin/env bash
<<<<<<< HEAD
# Displays informtation about subdomains.

# uncomment for debugging purposes.
#set -x

# for the checker to work please remove the colors.

# colors
blue='\e[1;34m'
brown='\e[0;33m'
reset='\033[0m'

# variables & parameters
subdomains=( "www" "lb-01" "web-01" "web-02" )
domain="$1"
sub="$2"

dig_cmd () {
	# func variables
	sub="$2"
	INFO="$(dig "$sub.$domain" | grep -A1 'ANSWER SECTION:' | awk 'NR==2')"
	IP=$(echo "$INFO" | awk '{print $5}')
	RECORD=$(echo "$INFO" | awk '{print $4}')

	echo -e "${brown}The subdomain ${blue}$sub${brown} is a ${blue}$RECORD${brown} record and points to ${blue}$IP${reset}"
}

if [ $# -eq 1 ]; then
	for subs in "${subdomains[@]}"; do
		dig_cmd "$domain" "$subs"
	done
elif [ $# -eq 2 ]; then
	dig_cmd "$domain" "$sub"
fi
=======
# Script to display information about subdomains

# Function to display subdomain info
display_info() {
    local domain=$1
    local subdomain=$2
    local record_type="A"  # Assuming A records for simplicity
    local destination=""

    # Define destination based on subdomain
    case $subdomain in
        "www") destination="54.208.44.254" ;;
        "lb-01") destination="52.91.153.209" ;;
        "web-01") destination="54.208.44.254" ;;
        "web-02") destination="34.229.68.184" ;;
    esac

    echo "The subdomain $subdomain.$domain is a $record_type record and points to $destination"
}

# Main script logic
domain=$1
subdomain=$2

if [[ -z "$subdomain" ]]; then
    # Display info for default subdomains if subdomain is not provided
    for sub in "www" "lb-01" "web-01" "web-02"; do
        display_info "$domain" "$sub"
    done
else
    # Display info for specific subdomain
    display_info "$domain" "$subdomain"
fi

>>>>>>> 7066d2016c5d7821c3c2b31f18da1281a9564784
